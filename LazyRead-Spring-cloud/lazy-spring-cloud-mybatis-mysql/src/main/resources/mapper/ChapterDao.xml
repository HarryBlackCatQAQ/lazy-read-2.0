<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hhr.lazyread.dao.ChapterDao">
  <resultMap id="BaseResultMap" type="com.hhr.lazyread.model.Chapter">
    <id column="chapter_id" jdbcType="INTEGER" property="id" />
    <result column="chapter_url" jdbcType="VARCHAR" property="url" />
    <result column="chapter_title" jdbcType="VARCHAR" property="title" />
    <result column="chapter_bookId" jdbcType="INTEGER" property="bookId" />
    <result column="chapter_content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chapter.id as chapter_id, chapter.url as chapter_url, chapter.title as chapter_title, 
    chapter.bookId as chapter_bookId, chapter.content as chapter_content
  </sql>
  <select id="selectByExample" parameterType="com.hhr.lazyread.model.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chapter chapter
    where chapter.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hhr.lazyread.model.ChapterExample">
    delete from chapter chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hhr.lazyread.model.Chapter" useGeneratedKeys="true">
    insert into chapter (url, title, bookId, 
      content)
    values (#{url,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hhr.lazyread.model.Chapter" useGeneratedKeys="true">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="url != null">
        url,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="bookId != null">
        bookId,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hhr.lazyread.model.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter chapter
    <set>
      <if test="record.id != null">
        chapter.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        chapter.url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        chapter.title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null">
        chapter.bookId = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        chapter.content = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter chapter
    set chapter.id = #{record.id,jdbcType=INTEGER},
      chapter.url = #{record.url,jdbcType=VARCHAR},
      chapter.title = #{record.title,jdbcType=VARCHAR},
      chapter.bookId = #{record.bookId,jdbcType=INTEGER},
      chapter.content = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hhr.lazyread.model.Chapter">
    update chapter
    <set>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        bookId = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hhr.lazyread.model.Chapter">
    update chapter
    set url = #{url,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      bookId = #{bookId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>